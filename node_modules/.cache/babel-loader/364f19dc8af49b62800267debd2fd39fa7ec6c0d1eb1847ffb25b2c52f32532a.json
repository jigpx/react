{"ast":null,"code":"var _jsxFileName = \"T:\\\\AI\\\\github\\\\react\\\\src\\\\components\\\\InstagramFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './InstagramFeed.css'; // Import the InstagramFeed styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstagramFeed = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const accessToken = 'YOUR_ACCESS_TOKEN'; // Replace with your actual access token\n\n  useEffect(() => {\n    const fetchInstagramPosts = async () => {\n      try {\n        const response = await fetch(`https://graph.instagram.com/me/media?fields=id,caption,media_url&access_token=${accessToken}`);\n        const data = await response.json();\n        console.log(data); // Log the full response to inspect it\n        if (data.data) {\n          setPosts(data.data);\n        } else {\n          console.log('No posts found or invalid data format');\n        }\n      } catch (error) {\n        console.error('Error fetching Instagram posts:', error);\n      }\n    };\n    fetchInstagramPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"instagram-feed\",\n    children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.media_url,\n        alt: post.caption,\n        className: \"post-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-caption\",\n        children: post.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Instagram feed...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(InstagramFeed, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = InstagramFeed;\nexport default InstagramFeed;\nvar _c;\n$RefreshReg$(_c, \"InstagramFeed\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","InstagramFeed","_s","posts","setPosts","accessToken","fetchInstagramPosts","response","fetch","data","json","console","log","error","className","children","length","map","post","src","media_url","alt","caption","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["T:/AI/github/react/src/components/InstagramFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './InstagramFeed.css';  // Import the InstagramFeed styles\r\n\r\nconst InstagramFeed = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const accessToken = 'YOUR_ACCESS_TOKEN'; // Replace with your actual access token\r\n\r\n  useEffect(() => {\r\n    const fetchInstagramPosts = async () => {\r\n      try {\r\n        const response = await fetch(`https://graph.instagram.com/me/media?fields=id,caption,media_url&access_token=${accessToken}`);\r\n        const data = await response.json();\r\n        console.log(data);  // Log the full response to inspect it\r\n        if (data.data) {\r\n          setPosts(data.data);\r\n        } else {\r\n          console.log('No posts found or invalid data format');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching Instagram posts:', error);\r\n      }\r\n    };\r\n\r\n    fetchInstagramPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"instagram-feed\">\r\n      {posts.length > 0 ? (\r\n        posts.map((post) => (\r\n          <div key={post.id} className=\"post\">\r\n            <img src={post.media_url} alt={post.caption} className=\"post-image\" />\r\n            <p className=\"post-caption\">{post.caption}</p>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>Loading Instagram feed...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstagramFeed;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,qBAAqB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMQ,WAAW,GAAG,mBAAmB,CAAC,CAAC;;EAEzCP,SAAS,CAAC,MAAM;IACd,MAAMQ,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iFAAiFH,WAAW,EAAE,CAAC;QAC5H,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAE;QACpB,IAAIA,IAAI,CAACA,IAAI,EAAE;UACbL,QAAQ,CAACK,IAAI,CAACA,IAAI,CAAC;QACrB,CAAC,MAAM;UACLE,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;QACtD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDP,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BZ,KAAK,CAACa,MAAM,GAAG,CAAC,GACfb,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACblB,OAAA;MAAmBc,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjCf,OAAA;QAAKmB,GAAG,EAAED,IAAI,CAACE,SAAU;QAACC,GAAG,EAAEH,IAAI,CAACI,OAAQ;QAACR,SAAS,EAAC;MAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtE1B,OAAA;QAAGc,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEG,IAAI,CAACI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFtCR,IAAI,CAACS,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACN,CAAC,gBAEF1B,OAAA;MAAAe,QAAA,EAAG;IAAyB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAChC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CArCID,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAuCnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}