{"ast":null,"code":"var _jsxFileName = \"T:\\\\AI\\\\github\\\\react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Your global CSS file\nimport { MDSnackbar } from './components/MDSnackbar'; // Import MDSnackbar component\nimport InstagramFeed from './components/InstagramFeed'; // Import InstagramFeed component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null); // Store the image as a base64 string\n  const [imageFile, setImageFile] = useState(null); // Store the file object\n  const [uploading, setUploading] = useState(false); // Track if image is being uploaded\n  const [uploadUrl, setUploadUrl] = useState(null); // Store the uploaded image URL\n  const [showSnackbar, setShowSnackbar] = useState(false); // Control the snackbar visibility\n  const [showFeed, setShowFeed] = useState(true); // Control the Instagram feed visibility\n\n  // Handle image selection\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImage(reader.result); // Set the image preview as base64\n        setImageFile(file); // Save the file object for uploading\n      };\n      reader.readAsDataURL(file); // Convert the image to base64 for preview\n    }\n  };\n\n  // Handle the upload button click\n  const handleUpload = () => {\n    if (imageFile) {\n      // Start the upload process\n      setUploading(true);\n\n      // Create a form to send the image to Cloudinary (using FormData)\n      const formData = new FormData();\n      formData.append('file', imageFile);\n      formData.append('upload_preset', 'preset-ai'); // Replace with your Cloudinary preset\n      formData.append('cloud_name', 'dmje8coun'); // Replace with your Cloudinary cloud name\n\n      // Upload the image to Cloudinary using fetch\n      fetch('https://api.cloudinary.com/v1_1/dmje8coun/image/upload', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        setUploading(false); // Stop the loading state\n        if (data.secure_url) {\n          setUploadUrl(data.secure_url); // Store the uploaded image URL\n          setShowSnackbar(true); // Show snackbar after upload\n        } else {\n          alert('Image upload failed!');\n        }\n      }).catch(error => {\n        setUploading(false); // Stop the loading state\n        console.error('Upload failed:', error);\n        alert('Image upload failed');\n      });\n    } else {\n      alert('Please select an image first!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload,\n      className: \"file-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Preview of uploaded image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Uploaded Preview\",\n        className: \"image-preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: uploading,\n      children: uploading ? 'Uploading...' : 'Upload Image'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), uploadUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploaded Image URL:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: uploadUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: uploadUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowFeed(!showFeed),\n      children: showFeed ? 'Hide Instagram Feed' : 'Show Instagram Feed'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), showFeed && /*#__PURE__*/_jsxDEV(InstagramFeed, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 20\n    }, this), showSnackbar && /*#__PURE__*/_jsxDEV(MDSnackbar, {\n      color: \"success\",\n      icon: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u2705\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this) // Example success icon\n      ,\n      title: \"Upload Successful\",\n      dateTime: \"Just now\",\n      content: \"Your image was uploaded successfully!\",\n      close: () => setShowSnackbar(false) // Close the snackbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WptkbI6HjgicAr4r5f9pQfKACgM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MDSnackbar","InstagramFeed","jsxDEV","_jsxDEV","App","_s","image","setImage","imageFile","setImageFile","uploading","setUploading","uploadUrl","setUploadUrl","showSnackbar","setShowSnackbar","showFeed","setShowFeed","handleImageUpload","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleUpload","formData","FormData","append","fetch","method","body","then","response","json","data","secure_url","alert","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","src","alt","onClick","disabled","href","rel","color","icon","title","dateTime","content","close","_c","$RefreshReg$"],"sources":["T:/AI/github/react/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css'; // Your global CSS file\r\nimport { MDSnackbar } from './components/MDSnackbar'; // Import MDSnackbar component\r\nimport InstagramFeed from './components/InstagramFeed'; // Import InstagramFeed component\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState(null); // Store the image as a base64 string\r\n  const [imageFile, setImageFile] = useState(null); // Store the file object\r\n  const [uploading, setUploading] = useState(false); // Track if image is being uploaded\r\n  const [uploadUrl, setUploadUrl] = useState(null); // Store the uploaded image URL\r\n  const [showSnackbar, setShowSnackbar] = useState(false); // Control the snackbar visibility\r\n  const [showFeed, setShowFeed] = useState(true); // Control the Instagram feed visibility\r\n\r\n  // Handle image selection\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImage(reader.result); // Set the image preview as base64\r\n        setImageFile(file); // Save the file object for uploading\r\n      };\r\n      reader.readAsDataURL(file); // Convert the image to base64 for preview\r\n    }\r\n  };\r\n\r\n  // Handle the upload button click\r\n  const handleUpload = () => {\r\n    if (imageFile) {\r\n      // Start the upload process\r\n      setUploading(true);\r\n\r\n      // Create a form to send the image to Cloudinary (using FormData)\r\n      const formData = new FormData();\r\n      formData.append('file', imageFile);\r\n      formData.append('upload_preset', 'preset-ai'); // Replace with your Cloudinary preset\r\n      formData.append('cloud_name', 'dmje8coun'); // Replace with your Cloudinary cloud name\r\n\r\n      // Upload the image to Cloudinary using fetch\r\n      fetch('https://api.cloudinary.com/v1_1/dmje8coun/image/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setUploading(false); // Stop the loading state\r\n          if (data.secure_url) {\r\n            setUploadUrl(data.secure_url); // Store the uploaded image URL\r\n            setShowSnackbar(true); // Show snackbar after upload\r\n          } else {\r\n            alert('Image upload failed!');\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setUploading(false); // Stop the loading state\r\n          console.error('Upload failed:', error);\r\n          alert('Image upload failed');\r\n        });\r\n    } else {\r\n      alert('Please select an image first!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Image Upload</h1>\r\n\r\n      {/* Image upload input */}\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={handleImageUpload}\r\n        className=\"file-input\"\r\n      />\r\n\r\n      {/* Show uploaded image preview */}\r\n      {image && (\r\n        <div className=\"image-preview-container\">\r\n          <h3>Preview of uploaded image:</h3>\r\n          <img src={image} alt=\"Uploaded Preview\" className=\"image-preview\" />\r\n        </div>\r\n      )}\r\n\r\n      {/* Upload button */}\r\n      <button onClick={handleUpload} disabled={uploading}>\r\n        {uploading ? 'Uploading...' : 'Upload Image'}\r\n      </button>\r\n\r\n      {/* Display uploaded image URL */}\r\n      {uploadUrl && (\r\n        <div>\r\n          <h3>Uploaded Image URL:</h3>\r\n          <a href={uploadUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {uploadUrl}\r\n          </a>\r\n        </div>\r\n      )}\r\n\r\n      {/* Instagram Feed Toggle */}\r\n      <button onClick={() => setShowFeed(!showFeed)}>\r\n        {showFeed ? 'Hide Instagram Feed' : 'Show Instagram Feed'}\r\n      </button>\r\n\r\n      {/* Conditionally render the Instagram Feed */}\r\n      {showFeed && <InstagramFeed />}\r\n\r\n      {/* Snackbar for upload completion */}\r\n      {showSnackbar && (\r\n        <MDSnackbar\r\n          color=\"success\"\r\n          icon={<span>✅</span>} // Example success icon\r\n          title=\"Upload Successful\"\r\n          dateTime=\"Just now\"\r\n          content=\"Your image was uploaded successfully!\"\r\n          close={() => setShowSnackbar(false)} // Close the snackbar\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}