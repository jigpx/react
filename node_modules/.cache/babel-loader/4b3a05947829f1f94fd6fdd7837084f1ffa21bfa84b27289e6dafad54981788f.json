{"ast":null,"code":"var _jsxFileName = \"T:\\\\AI\\\\github\\\\react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Your global CSS file\n// import InstagramFeed from './components/InstagramFeed';  // Import InstagramFeed component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null); // Store the image as a base64 string\n  const [imageFile, setImageFile] = useState(null); // Store the file object\n  const [uploading, setUploading] = useState(false); // Track if image is being uploaded\n  const [uploadUrl, setUploadUrl] = useState(null); // Store the uploaded image URL\n\n  // Handle image selection\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImage(reader.result); // Set the image preview as base64\n        setImageFile(file); // Save the file object for uploading\n      };\n      reader.readAsDataURL(file); // Convert the image to base64 for preview\n    }\n  };\n\n  // Handle the upload button click\n  const handleUpload = () => {\n    if (imageFile) {\n      // Start the upload process\n      setUploading(true);\n\n      // Create a form to send the image to Cloudinary (using FormData)\n      const formData = new FormData();\n      formData.append('file', imageFile);\n      formData.append('upload_preset', 'preset-ai'); // Replace with your Cloudinary preset\n      formData.append('cloud_name', 'dmje8coun'); // Replace with your Cloudinary cloud name\n\n      // Upload the image to Cloudinary using fetch\n      fetch('https://api.cloudinary.com/v1_1/dmje8coun/image/upload', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        setUploading(false); // Stop the loading state\n        if (data.secure_url) {\n          setUploadUrl(data.secure_url); // Store the uploaded image URL\n          alert('Image uploaded successfully!');\n        } else {\n          alert('Image upload failed!');\n        }\n      }).catch(error => {\n        setUploading(false); // Stop the loading state\n        console.error('Upload failed:', error);\n        alert('Image upload failed');\n      });\n    } else {\n      alert('Please select an image first!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload,\n      className: \"file-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Preview of uploaded image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Uploaded Preview\",\n        className: \"image-preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: uploading,\n      children: uploading ? 'Uploading...' : 'Upload Image'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), uploadUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploaded Image URL:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: uploadUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: uploadUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), \"/*\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instagram-feed\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instagram Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InstagramFeed, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), \" \", \"*/\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LJRiVRb7fXE1M3gPsQ3ivynIIB8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","image","setImage","imageFile","setImageFile","uploading","setUploading","uploadUrl","setUploadUrl","handleImageUpload","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleUpload","formData","FormData","append","fetch","method","body","then","response","json","data","secure_url","alert","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","src","alt","onClick","disabled","href","rel","InstagramFeed","_c","$RefreshReg$"],"sources":["T:/AI/github/react/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';  // Your global CSS file\r\n// import InstagramFeed from './components/InstagramFeed';  // Import InstagramFeed component\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState(null);  // Store the image as a base64 string\r\n  const [imageFile, setImageFile] = useState(null);  // Store the file object\r\n  const [uploading, setUploading] = useState(false);  // Track if image is being uploaded\r\n  const [uploadUrl, setUploadUrl] = useState(null);  // Store the uploaded image URL\r\n\r\n  // Handle image selection\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImage(reader.result); // Set the image preview as base64\r\n        setImageFile(file); // Save the file object for uploading\r\n      };\r\n      reader.readAsDataURL(file); // Convert the image to base64 for preview\r\n    }\r\n  };\r\n\r\n  // Handle the upload button click\r\n  const handleUpload = () => {\r\n    if (imageFile) {\r\n      // Start the upload process\r\n      setUploading(true);\r\n\r\n      // Create a form to send the image to Cloudinary (using FormData)\r\n      const formData = new FormData();\r\n      formData.append('file', imageFile);\r\n      formData.append('upload_preset', 'preset-ai'); // Replace with your Cloudinary preset\r\n      formData.append('cloud_name', 'dmje8coun'); // Replace with your Cloudinary cloud name\r\n\r\n      // Upload the image to Cloudinary using fetch\r\n      fetch('https://api.cloudinary.com/v1_1/dmje8coun/image/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setUploading(false);  // Stop the loading state\r\n          if (data.secure_url) {\r\n            setUploadUrl(data.secure_url); // Store the uploaded image URL\r\n            alert('Image uploaded successfully!');\r\n          } else {\r\n            alert('Image upload failed!');\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setUploading(false);  // Stop the loading state\r\n          console.error('Upload failed:', error);\r\n          alert('Image upload failed');\r\n        });\r\n    } else {\r\n      alert('Please select an image first!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Image Upload</h1>\r\n\r\n      {/* Image upload input */}\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={handleImageUpload}\r\n        className=\"file-input\"\r\n      />\r\n\r\n      {/* Show uploaded image preview */}\r\n      {image && (\r\n        <div className=\"image-preview-container\">\r\n          <h3>Preview of uploaded image:</h3>\r\n          <img src={image} alt=\"Uploaded Preview\" className=\"image-preview\" />\r\n        </div>\r\n      )}\r\n\r\n      {/* Upload button */}\r\n      <button onClick={handleUpload} disabled={uploading}>\r\n        {uploading ? 'Uploading...' : 'Upload Image'}\r\n      </button>\r\n\r\n      {/* Display uploaded image URL */}\r\n      {uploadUrl && (\r\n        <div>\r\n          <h3>Uploaded Image URL:</h3>\r\n          <a href={uploadUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {uploadUrl}\r\n          </a>\r\n        </div>\r\n      )}\r\n\r\n      /*{/* Instagram Feed */}\r\n      <div className=\"instagram-feed\">\r\n        <h2>Instagram Feed</h2>\r\n        <InstagramFeed /> {/* Add InstagramFeed component here */}*/\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW,CAAC,CAAE;AACrB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC3C,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACnD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;EACpD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAEnD;EACA,MAAMa,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACvBd,QAAQ,CAACY,MAAM,CAACG,MAAM,CAAC,CAAC,CAAC;QACzBb,YAAY,CAACO,IAAI,CAAC,CAAC,CAAC;MACtB,CAAC;MACDG,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC,CAAC,CAAC;IAC9B;EACF,CAAC;;EAED;EACA,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIhB,SAAS,EAAE;MACb;MACAG,YAAY,CAAC,IAAI,CAAC;;MAElB;MACA,MAAMc,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEnB,SAAS,CAAC;MAClCiB,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC,CAAC;MAC/CF,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC,CAAC;;MAE5C;MACAC,KAAK,CAAC,wDAAwD,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEL;MACR,CAAC,CAAC,CACCM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACdvB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAE;QACtB,IAAIuB,IAAI,CAACC,UAAU,EAAE;UACnBtB,YAAY,CAACqB,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;UAC/BC,KAAK,CAAC,8BAA8B,CAAC;QACvC,CAAC,MAAM;UACLA,KAAK,CAAC,sBAAsB,CAAC;QAC/B;MACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChB3B,YAAY,CAAC,KAAK,CAAC,CAAC,CAAE;QACtB4B,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACtCF,KAAK,CAAC,qBAAqB,CAAC;MAC9B,CAAC,CAAC;IACN,CAAC,MAAM;MACLA,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF,CAAC;EAED,oBACEjC,OAAA;IAAKqC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtC,OAAA;MAAAsC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGrB1C,OAAA;MACE2C,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,SAAS;MAChBC,QAAQ,EAAElC,iBAAkB;MAC5B0B,SAAS,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,EAGDvC,KAAK,iBACJH,OAAA;MAAKqC,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtCtC,OAAA;QAAAsC,QAAA,EAAI;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnC1C,OAAA;QAAK8C,GAAG,EAAE3C,KAAM;QAAC4C,GAAG,EAAC,kBAAkB;QAACV,SAAS,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CACN,eAGD1C,OAAA;MAAQgD,OAAO,EAAE3B,YAAa;MAAC4B,QAAQ,EAAE1C,SAAU;MAAA+B,QAAA,EAChD/B,SAAS,GAAG,cAAc,GAAG;IAAc;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,EAGRjC,SAAS,iBACRT,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5B1C,OAAA;QAAGkD,IAAI,EAAEzC,SAAU;QAACK,MAAM,EAAC,QAAQ;QAACqC,GAAG,EAAC,qBAAqB;QAAAb,QAAA,EAC1D7B;MAAS;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN,EAAC,IAEA,eACF1C,OAAA;MAAKqC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BtC,OAAA;QAAAsC,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB1C,OAAA,CAACoD,aAAa;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC,EAAwC,IAC5D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxC,EAAA,CAlGQD,GAAG;AAAAoD,EAAA,GAAHpD,GAAG;AAoGZ,eAAeA,GAAG;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}